{
  "Has": {
    "feature": {
      "type": "string | string[]",
      "required": true,
      "description": "One or more flags to match."
    },
    "children": {
      "type": "string | number | boolean | ReactElement<any, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal | PromiseLikeOfReactNode | (({ flags }: { ...; }) => ReactElement<...>)",
      "required": false,
      "description": "Children will be rendered when the result is valid."
    },
    "exact": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "Match all or some flags."
    },
    "fallback": {
      "type": "type ONLY_FOR_FORMAT =\n  | string\n  | number\n  | boolean\n  | ReactElement<any, string | JSXElementConstructor<any>>\n  | Iterable<ReactNode>\n  | ReactPortal\n  | PromiseLikeOfReactNode",
      "required": false,
      "description": "Renders the result is invalid."
    },
    "not": {
      "type": "boolean",
      "required": false,
      "description": "Inverse matching, eg will be valid when no flags match."
    },
    "value": {
      "type": "any",
      "required": false,
      "description": "Match the supplied flags to this value.\nMatches all truthy values by default."
    }
  },
  "FeaturesOptions": {
    "segments": { "type": "Segment[]", "required": true },
    "attr": { "type": "UserAttributes", "required": false }
  },
  "FeaturesProvider": {
    "children": {
      "type": "type ONLY_FOR_FORMAT =\n  | string\n  | number\n  | boolean\n  | ReactElement<any, string | JSXElementConstructor<any>>\n  | Iterable<ReactNode>\n  | ReactPortal\n  | PromiseLikeOfReactNode",
      "required": false
    },
    "value": { "type": "FeaturesOptions", "required": false }
  }
}
