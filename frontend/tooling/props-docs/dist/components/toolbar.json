{
  "ToolbarButton": {
    "label": { "type": "string", "required": true },
    "icon": {
      "type": "ReactElement<any, string | JSXElementConstructor<any>>",
      "required": false
    },
    "iconSpacing": {
      "type": "ResponsiveValue<number | \"px\" | (string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | \"1\" | \"-1\" | \"2\" | \"-2\" | \"3\" | \"-3\" | \"4\" | \"-4\" | \"5\" | \"-5\" | ... 54 more ... | \"-3.5\">",
      "required": false,
      "description": "The space between the button icon and label."
    },
    "isActive": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the button will be styled in its active state."
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the button will be disabled."
    },
    "isLoading": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the button will show a spinner."
    },
    "leftIcon": {
      "type": "ReactElement<any, string | JSXElementConstructor<any>>",
      "required": false,
      "description": "If added, the button will show an icon before the button's label."
    },
    "loadingText": {
      "type": "type ONLY_FOR_FORMAT =\n  | string\n  | number\n  | boolean\n  | ReactElement<any, string | JSXElementConstructor<any>>\n  | Iterable<ReactNode>\n  | ReactPortal\n  | PromiseLikeOfReactNode",
      "required": false,
      "description": "The label to show in the button when `isLoading` is true\nIf no text is passed, it only shows the spinner"
    },
    "rightIcon": {
      "type": "ReactElement<any, string | JSXElementConstructor<any>>",
      "required": false,
      "description": "If added, the button will show an icon after the button's label."
    },
    "spinner": {
      "type": "ReactElement<any, string | JSXElementConstructor<any>>",
      "required": false,
      "description": "Replace the spinner component when `isLoading` is set to `true`"
    },
    "spinnerPlacement": {
      "type": "\"start\" | \"end\"",
      "defaultValue": "start",
      "required": false,
      "description": "It determines the placement of the spinner when isLoading is true"
    },
    "tooltipProps": {
      "type": "Omit<TooltipProps, \"children\">",
      "required": false
    }
  },
  "Toolbar": {},
  "ToolbarToggleButton": {
    "label": { "type": "string", "required": true },
    "icon": {
      "type": "ReactElement<any, string | JSXElementConstructor<any>>",
      "required": false
    },
    "iconSpacing": {
      "type": "ResponsiveValue<number | \"px\" | (string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | \"1\" | \"-1\" | \"2\" | \"-2\" | \"3\" | \"-3\" | \"4\" | \"-4\" | \"5\" | \"-5\" | ... 54 more ... | \"-3.5\">",
      "required": false,
      "description": "The space between the button icon and label."
    },
    "isActive": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the button will be styled in its active state."
    },
    "isChecked": { "type": "boolean", "required": false },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the button will be disabled."
    },
    "isLoading": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the button will show a spinner."
    },
    "leftIcon": {
      "type": "ReactElement<any, string | JSXElementConstructor<any>>",
      "required": false,
      "description": "If added, the button will show an icon before the button's label."
    },
    "loadingText": {
      "type": "type ONLY_FOR_FORMAT =\n  | string\n  | number\n  | boolean\n  | ReactElement<any, string | JSXElementConstructor<any>>\n  | Iterable<ReactNode>\n  | ReactPortal\n  | PromiseLikeOfReactNode",
      "required": false,
      "description": "The label to show in the button when `isLoading` is true\nIf no text is passed, it only shows the spinner"
    },
    "rightIcon": {
      "type": "ReactElement<any, string | JSXElementConstructor<any>>",
      "required": false,
      "description": "If added, the button will show an icon after the button's label."
    },
    "spinner": {
      "type": "ReactElement<any, string | JSXElementConstructor<any>>",
      "required": false,
      "description": "Replace the spinner component when `isLoading` is set to `true`"
    },
    "spinnerPlacement": {
      "type": "\"start\" | \"end\"",
      "defaultValue": "start",
      "required": false,
      "description": "It determines the placement of the spinner when isLoading is true"
    },
    "tooltipProps": {
      "type": "Omit<TooltipProps, \"children\">",
      "required": false
    },
    "type": { "type": "\"radio\" | \"checkbox\"", "required": false },
    "value": { "type": "string", "required": false }
  },
  "ToolbarToggleGroup": {
    "defaultValue": { "type": "string | string[]", "required": false },
    "isAttached": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the borderRadius of button that are direct children will be altered\nto look flushed together"
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, all wrapped button will be disabled"
    },
    "onChange": {
      "type": "(value: string | string[]) => void",
      "required": false
    },
    "spacing": {
      "type": "ResponsiveValue<number | \"px\" | (string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | \"1\" | \"-1\" | \"2\" | \"-2\" | \"3\" | \"-3\" | \"4\" | \"-4\" | \"5\" | \"-5\" | ... 54 more ... | \"-3.5\">",
      "defaultValue": "'0.5rem'",
      "required": false,
      "description": "The spacing between the buttons"
    },
    "type": { "type": "\"radio\" | \"checkbox\"", "required": false },
    "value": { "type": "string | string[]", "required": false }
  }
}
